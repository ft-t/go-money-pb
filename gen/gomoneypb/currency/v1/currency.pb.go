// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: gomoneypb/currency/v1/currency.proto

package currencyv1

import (
	v1 "github.com/ft-t/go-money-pb/gen/gomoneypb/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeleteCurrencyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCurrencyRequest) Reset() {
	*x = DeleteCurrencyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gomoneypb_currency_v1_currency_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCurrencyRequest) ProtoMessage() {}

func (x *DeleteCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gomoneypb_currency_v1_currency_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCurrencyRequest.ProtoReflect.Descriptor instead.
func (*DeleteCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_gomoneypb_currency_v1_currency_proto_rawDescGZIP(), []int{0}
}

func (x *DeleteCurrencyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteCurrencyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency *v1.Currency `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *DeleteCurrencyResponse) Reset() {
	*x = DeleteCurrencyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gomoneypb_currency_v1_currency_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCurrencyResponse) ProtoMessage() {}

func (x *DeleteCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gomoneypb_currency_v1_currency_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCurrencyResponse.ProtoReflect.Descriptor instead.
func (*DeleteCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_gomoneypb_currency_v1_currency_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteCurrencyResponse) GetCurrency() *v1.Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

type UpdateCurrencyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Rate          string `protobuf:"bytes,2,opt,name=rate,proto3" json:"rate,omitempty"`
	IsActive      bool   `protobuf:"varint,3,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	DecimalPlaces int32  `protobuf:"varint,4,opt,name=decimal_places,json=decimalPlaces,proto3" json:"decimal_places,omitempty"`
}

func (x *UpdateCurrencyRequest) Reset() {
	*x = UpdateCurrencyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gomoneypb_currency_v1_currency_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCurrencyRequest) ProtoMessage() {}

func (x *UpdateCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gomoneypb_currency_v1_currency_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCurrencyRequest.ProtoReflect.Descriptor instead.
func (*UpdateCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_gomoneypb_currency_v1_currency_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateCurrencyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateCurrencyRequest) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *UpdateCurrencyRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *UpdateCurrencyRequest) GetDecimalPlaces() int32 {
	if x != nil {
		return x.DecimalPlaces
	}
	return 0
}

type UpdateCurrencyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency *v1.Currency `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *UpdateCurrencyResponse) Reset() {
	*x = UpdateCurrencyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gomoneypb_currency_v1_currency_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCurrencyResponse) ProtoMessage() {}

func (x *UpdateCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gomoneypb_currency_v1_currency_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCurrencyResponse.ProtoReflect.Descriptor instead.
func (*UpdateCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_gomoneypb_currency_v1_currency_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateCurrencyResponse) GetCurrency() *v1.Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

type CreateCurrencyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency *v1.Currency `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *CreateCurrencyResponse) Reset() {
	*x = CreateCurrencyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gomoneypb_currency_v1_currency_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCurrencyResponse) ProtoMessage() {}

func (x *CreateCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gomoneypb_currency_v1_currency_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCurrencyResponse.ProtoReflect.Descriptor instead.
func (*CreateCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_gomoneypb_currency_v1_currency_proto_rawDescGZIP(), []int{4}
}

func (x *CreateCurrencyResponse) GetCurrency() *v1.Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

type CreateCurrencyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency *v1.Currency `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *CreateCurrencyRequest) Reset() {
	*x = CreateCurrencyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gomoneypb_currency_v1_currency_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCurrencyRequest) ProtoMessage() {}

func (x *CreateCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gomoneypb_currency_v1_currency_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCurrencyRequest.ProtoReflect.Descriptor instead.
func (*CreateCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_gomoneypb_currency_v1_currency_proto_rawDescGZIP(), []int{5}
}

func (x *CreateCurrencyRequest) GetCurrency() *v1.Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

type GetCurrenciesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Rate          string `protobuf:"bytes,2,opt,name=rate,proto3" json:"rate,omitempty"`
	IsActive      bool   `protobuf:"varint,3,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	DecimalPlaces int32  `protobuf:"varint,4,opt,name=decimal_places,json=decimalPlaces,proto3" json:"decimal_places,omitempty"`
}

func (x *GetCurrenciesRequest) Reset() {
	*x = GetCurrenciesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gomoneypb_currency_v1_currency_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrenciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrenciesRequest) ProtoMessage() {}

func (x *GetCurrenciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gomoneypb_currency_v1_currency_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrenciesRequest.ProtoReflect.Descriptor instead.
func (*GetCurrenciesRequest) Descriptor() ([]byte, []int) {
	return file_gomoneypb_currency_v1_currency_proto_rawDescGZIP(), []int{6}
}

func (x *GetCurrenciesRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetCurrenciesRequest) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *GetCurrenciesRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *GetCurrenciesRequest) GetDecimalPlaces() int32 {
	if x != nil {
		return x.DecimalPlaces
	}
	return 0
}

type GetCurrenciesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currencies []*v1.Currency `protobuf:"bytes,1,rep,name=currencies,proto3" json:"currencies,omitempty"`
}

func (x *GetCurrenciesResponse) Reset() {
	*x = GetCurrenciesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gomoneypb_currency_v1_currency_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrenciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrenciesResponse) ProtoMessage() {}

func (x *GetCurrenciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gomoneypb_currency_v1_currency_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrenciesResponse.ProtoReflect.Descriptor instead.
func (*GetCurrenciesResponse) Descriptor() ([]byte, []int) {
	return file_gomoneypb_currency_v1_currency_proto_rawDescGZIP(), []int{7}
}

func (x *GetCurrenciesResponse) GetCurrencies() []*v1.Currency {
	if x != nil {
		return x.Currencies
	}
	return nil
}

type ExchangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromCurrency string `protobuf:"bytes,1,opt,name=from_currency,json=fromCurrency,proto3" json:"from_currency,omitempty"`
	ToCurrency   string `protobuf:"bytes,2,opt,name=to_currency,json=toCurrency,proto3" json:"to_currency,omitempty"`
	Amount       string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *ExchangeRequest) Reset() {
	*x = ExchangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gomoneypb_currency_v1_currency_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRequest) ProtoMessage() {}

func (x *ExchangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gomoneypb_currency_v1_currency_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRequest.ProtoReflect.Descriptor instead.
func (*ExchangeRequest) Descriptor() ([]byte, []int) {
	return file_gomoneypb_currency_v1_currency_proto_rawDescGZIP(), []int{8}
}

func (x *ExchangeRequest) GetFromCurrency() string {
	if x != nil {
		return x.FromCurrency
	}
	return ""
}

func (x *ExchangeRequest) GetToCurrency() string {
	if x != nil {
		return x.ToCurrency
	}
	return ""
}

func (x *ExchangeRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type ExchangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *ExchangeResponse) Reset() {
	*x = ExchangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gomoneypb_currency_v1_currency_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeResponse) ProtoMessage() {}

func (x *ExchangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gomoneypb_currency_v1_currency_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeResponse.ProtoReflect.Descriptor instead.
func (*ExchangeResponse) Descriptor() ([]byte, []int) {
	return file_gomoneypb_currency_v1_currency_proto_rawDescGZIP(), []int{9}
}

func (x *ExchangeResponse) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

var File_gomoneypb_currency_v1_currency_proto protoreflect.FileDescriptor

var file_gomoneypb_currency_v1_currency_proto_rawDesc = []byte{
	0x0a, 0x24, 0x67, 0x6f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x70, 0x62, 0x2f, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x67, 0x6f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x70,
	0x62, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67,
	0x6f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x70, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x22, 0x7f, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x73, 0x22, 0x4c, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x22, 0x4c, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67,
	0x6f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x4b,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6d, 0x6f,
	0x6e, 0x65, 0x79, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x7e, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x22, 0x4f, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6d, 0x6f, 0x6e,
	0x65, 0x79, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x22, 0x6f, 0x0a, 0x0f,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2a, 0x0a,
	0x10, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xb1, 0x04, 0x0a, 0x0f, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a,
	0x08, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x26, 0x2e, 0x67, 0x6f, 0x6d, 0x6f,
	0x6e, 0x65, 0x79, 0x70, 0x62, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x67, 0x6f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x70, 0x62, 0x2e, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x2b, 0x2e,
	0x67, 0x6f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x70, 0x62, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x67, 0x6f, 0x6d,
	0x6f, 0x6e, 0x65, 0x79, 0x70, 0x62, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2c, 0x2e, 0x67,
	0x6f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x70, 0x62, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x67, 0x6f, 0x6d,
	0x6f, 0x6e, 0x65, 0x79, 0x70, 0x62, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x0e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2c, 0x2e,
	0x67, 0x6f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x70, 0x62, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x67, 0x6f,
	0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x70, 0x62, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x0e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2c,
	0x2e, 0x67, 0x6f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x70, 0x62, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x67,
	0x6f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x70, 0x62, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xe2, 0x01,
	0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x70, 0x62, 0x2e,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x40, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x74, 0x2d, 0x74, 0x2f, 0x67, 0x6f,
	0x2d, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x2d, 0x70, 0x62, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f,
	0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x70, 0x62, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x2f, 0x76, 0x31, 0x3b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x76, 0x31, 0xa2, 0x02,
	0x03, 0x47, 0x43, 0x58, 0xaa, 0x02, 0x15, 0x47, 0x6f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x70, 0x62,
	0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x15, 0x47,
	0x6f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x70, 0x62, 0x5c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x21, 0x47, 0x6f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x70, 0x62,
	0x5c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x17, 0x47, 0x6f, 0x6d, 0x6f, 0x6e,
	0x65, 0x79, 0x70, 0x62, 0x3a, 0x3a, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gomoneypb_currency_v1_currency_proto_rawDescOnce sync.Once
	file_gomoneypb_currency_v1_currency_proto_rawDescData = file_gomoneypb_currency_v1_currency_proto_rawDesc
)

func file_gomoneypb_currency_v1_currency_proto_rawDescGZIP() []byte {
	file_gomoneypb_currency_v1_currency_proto_rawDescOnce.Do(func() {
		file_gomoneypb_currency_v1_currency_proto_rawDescData = protoimpl.X.CompressGZIP(file_gomoneypb_currency_v1_currency_proto_rawDescData)
	})
	return file_gomoneypb_currency_v1_currency_proto_rawDescData
}

var file_gomoneypb_currency_v1_currency_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_gomoneypb_currency_v1_currency_proto_goTypes = []any{
	(*DeleteCurrencyRequest)(nil),  // 0: gomoneypb.currency.v1.DeleteCurrencyRequest
	(*DeleteCurrencyResponse)(nil), // 1: gomoneypb.currency.v1.DeleteCurrencyResponse
	(*UpdateCurrencyRequest)(nil),  // 2: gomoneypb.currency.v1.UpdateCurrencyRequest
	(*UpdateCurrencyResponse)(nil), // 3: gomoneypb.currency.v1.UpdateCurrencyResponse
	(*CreateCurrencyResponse)(nil), // 4: gomoneypb.currency.v1.CreateCurrencyResponse
	(*CreateCurrencyRequest)(nil),  // 5: gomoneypb.currency.v1.CreateCurrencyRequest
	(*GetCurrenciesRequest)(nil),   // 6: gomoneypb.currency.v1.GetCurrenciesRequest
	(*GetCurrenciesResponse)(nil),  // 7: gomoneypb.currency.v1.GetCurrenciesResponse
	(*ExchangeRequest)(nil),        // 8: gomoneypb.currency.v1.ExchangeRequest
	(*ExchangeResponse)(nil),       // 9: gomoneypb.currency.v1.ExchangeResponse
	(*v1.Currency)(nil),            // 10: gomoneypb.v1.Currency
}
var file_gomoneypb_currency_v1_currency_proto_depIdxs = []int32{
	10, // 0: gomoneypb.currency.v1.DeleteCurrencyResponse.currency:type_name -> gomoneypb.v1.Currency
	10, // 1: gomoneypb.currency.v1.UpdateCurrencyResponse.currency:type_name -> gomoneypb.v1.Currency
	10, // 2: gomoneypb.currency.v1.CreateCurrencyResponse.currency:type_name -> gomoneypb.v1.Currency
	10, // 3: gomoneypb.currency.v1.CreateCurrencyRequest.currency:type_name -> gomoneypb.v1.Currency
	10, // 4: gomoneypb.currency.v1.GetCurrenciesResponse.currencies:type_name -> gomoneypb.v1.Currency
	8,  // 5: gomoneypb.currency.v1.CurrencyService.Exchange:input_type -> gomoneypb.currency.v1.ExchangeRequest
	6,  // 6: gomoneypb.currency.v1.CurrencyService.GetCurrencies:input_type -> gomoneypb.currency.v1.GetCurrenciesRequest
	5,  // 7: gomoneypb.currency.v1.CurrencyService.CreateCurrency:input_type -> gomoneypb.currency.v1.CreateCurrencyRequest
	2,  // 8: gomoneypb.currency.v1.CurrencyService.UpdateCurrency:input_type -> gomoneypb.currency.v1.UpdateCurrencyRequest
	0,  // 9: gomoneypb.currency.v1.CurrencyService.DeleteCurrency:input_type -> gomoneypb.currency.v1.DeleteCurrencyRequest
	9,  // 10: gomoneypb.currency.v1.CurrencyService.Exchange:output_type -> gomoneypb.currency.v1.ExchangeResponse
	7,  // 11: gomoneypb.currency.v1.CurrencyService.GetCurrencies:output_type -> gomoneypb.currency.v1.GetCurrenciesResponse
	4,  // 12: gomoneypb.currency.v1.CurrencyService.CreateCurrency:output_type -> gomoneypb.currency.v1.CreateCurrencyResponse
	3,  // 13: gomoneypb.currency.v1.CurrencyService.UpdateCurrency:output_type -> gomoneypb.currency.v1.UpdateCurrencyResponse
	1,  // 14: gomoneypb.currency.v1.CurrencyService.DeleteCurrency:output_type -> gomoneypb.currency.v1.DeleteCurrencyResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_gomoneypb_currency_v1_currency_proto_init() }
func file_gomoneypb_currency_v1_currency_proto_init() {
	if File_gomoneypb_currency_v1_currency_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gomoneypb_currency_v1_currency_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteCurrencyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gomoneypb_currency_v1_currency_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteCurrencyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gomoneypb_currency_v1_currency_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateCurrencyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gomoneypb_currency_v1_currency_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateCurrencyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gomoneypb_currency_v1_currency_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CreateCurrencyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gomoneypb_currency_v1_currency_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CreateCurrencyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gomoneypb_currency_v1_currency_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetCurrenciesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gomoneypb_currency_v1_currency_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetCurrenciesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gomoneypb_currency_v1_currency_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ExchangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gomoneypb_currency_v1_currency_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ExchangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gomoneypb_currency_v1_currency_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gomoneypb_currency_v1_currency_proto_goTypes,
		DependencyIndexes: file_gomoneypb_currency_v1_currency_proto_depIdxs,
		MessageInfos:      file_gomoneypb_currency_v1_currency_proto_msgTypes,
	}.Build()
	File_gomoneypb_currency_v1_currency_proto = out.File
	file_gomoneypb_currency_v1_currency_proto_rawDesc = nil
	file_gomoneypb_currency_v1_currency_proto_goTypes = nil
	file_gomoneypb_currency_v1_currency_proto_depIdxs = nil
}
