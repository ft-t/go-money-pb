// @generated by protoc-gen-es v1.10.0 with parameter "target=ts,import_extension=none"
// @generated from file gomoneypb/accounts/v1/accounts.proto (package gomoneypb.accounts.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Account, AccountType } from "../../v1/account_pb";

/**
 * @generated from message gomoneypb.accounts.v1.ReorderAccountsRequest
 */
export class ReorderAccountsRequest extends Message<ReorderAccountsRequest> {
  /**
   * @generated from field: repeated int32 ids = 1;
   */
  ids: number[] = [];

  constructor(data?: PartialMessage<ReorderAccountsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gomoneypb.accounts.v1.ReorderAccountsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ids", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReorderAccountsRequest {
    return new ReorderAccountsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReorderAccountsRequest {
    return new ReorderAccountsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReorderAccountsRequest {
    return new ReorderAccountsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ReorderAccountsRequest | PlainMessage<ReorderAccountsRequest> | undefined, b: ReorderAccountsRequest | PlainMessage<ReorderAccountsRequest> | undefined): boolean {
    return proto3.util.equals(ReorderAccountsRequest, a, b);
  }
}

/**
 * @generated from message gomoneypb.accounts.v1.ReorderAccountsResponse
 */
export class ReorderAccountsResponse extends Message<ReorderAccountsResponse> {
  /**
   * @generated from field: repeated gomoneypb.v1.Account accounts = 1;
   */
  accounts: Account[] = [];

  constructor(data?: PartialMessage<ReorderAccountsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gomoneypb.accounts.v1.ReorderAccountsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "accounts", kind: "message", T: Account, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReorderAccountsResponse {
    return new ReorderAccountsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReorderAccountsResponse {
    return new ReorderAccountsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReorderAccountsResponse {
    return new ReorderAccountsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ReorderAccountsResponse | PlainMessage<ReorderAccountsResponse> | undefined, b: ReorderAccountsResponse | PlainMessage<ReorderAccountsResponse> | undefined): boolean {
    return proto3.util.equals(ReorderAccountsResponse, a, b);
  }
}

/**
 * @generated from message gomoneypb.accounts.v1.DeleteAccountRequest
 */
export class DeleteAccountRequest extends Message<DeleteAccountRequest> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  constructor(data?: PartialMessage<DeleteAccountRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gomoneypb.accounts.v1.DeleteAccountRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAccountRequest {
    return new DeleteAccountRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAccountRequest {
    return new DeleteAccountRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAccountRequest {
    return new DeleteAccountRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteAccountRequest | PlainMessage<DeleteAccountRequest> | undefined, b: DeleteAccountRequest | PlainMessage<DeleteAccountRequest> | undefined): boolean {
    return proto3.util.equals(DeleteAccountRequest, a, b);
  }
}

/**
 * @generated from message gomoneypb.accounts.v1.DeleteAccountResponse
 */
export class DeleteAccountResponse extends Message<DeleteAccountResponse> {
  /**
   * @generated from field: gomoneypb.v1.Account account = 1;
   */
  account?: Account;

  constructor(data?: PartialMessage<DeleteAccountResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gomoneypb.accounts.v1.DeleteAccountResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account", kind: "message", T: Account },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAccountResponse {
    return new DeleteAccountResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAccountResponse {
    return new DeleteAccountResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAccountResponse {
    return new DeleteAccountResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteAccountResponse | PlainMessage<DeleteAccountResponse> | undefined, b: DeleteAccountResponse | PlainMessage<DeleteAccountResponse> | undefined): boolean {
    return proto3.util.equals(DeleteAccountResponse, a, b);
  }
}

/**
 * @generated from message gomoneypb.accounts.v1.UpdateAccountRequest
 */
export class UpdateAccountRequest extends Message<UpdateAccountRequest> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: map<string, string> extra = 3;
   */
  extra: { [key: string]: string } = {};

  /**
   * @generated from field: gomoneypb.v1.AccountType type = 4;
   */
  type = AccountType.UNSPECIFIED;

  /**
   * @generated from field: string note = 5;
   */
  note = "";

  /**
   * @generated from field: optional string liability_percent = 6;
   */
  liabilityPercent?: string;

  /**
   * @generated from field: string iban = 7;
   */
  iban = "";

  /**
   * @generated from field: string account_number = 8;
   */
  accountNumber = "";

  constructor(data?: PartialMessage<UpdateAccountRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gomoneypb.accounts.v1.UpdateAccountRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "extra", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 4, name: "type", kind: "enum", T: proto3.getEnumType(AccountType) },
    { no: 5, name: "note", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "liability_percent", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "iban", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "account_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAccountRequest {
    return new UpdateAccountRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAccountRequest {
    return new UpdateAccountRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAccountRequest {
    return new UpdateAccountRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAccountRequest | PlainMessage<UpdateAccountRequest> | undefined, b: UpdateAccountRequest | PlainMessage<UpdateAccountRequest> | undefined): boolean {
    return proto3.util.equals(UpdateAccountRequest, a, b);
  }
}

/**
 * @generated from message gomoneypb.accounts.v1.UpdateAccountResponse
 */
export class UpdateAccountResponse extends Message<UpdateAccountResponse> {
  /**
   * @generated from field: gomoneypb.v1.Account account = 1;
   */
  account?: Account;

  constructor(data?: PartialMessage<UpdateAccountResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gomoneypb.accounts.v1.UpdateAccountResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account", kind: "message", T: Account },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAccountResponse {
    return new UpdateAccountResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAccountResponse {
    return new UpdateAccountResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAccountResponse {
    return new UpdateAccountResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAccountResponse | PlainMessage<UpdateAccountResponse> | undefined, b: UpdateAccountResponse | PlainMessage<UpdateAccountResponse> | undefined): boolean {
    return proto3.util.equals(UpdateAccountResponse, a, b);
  }
}

/**
 * @generated from message gomoneypb.accounts.v1.ListAccountsRequest
 */
export class ListAccountsRequest extends Message<ListAccountsRequest> {
  constructor(data?: PartialMessage<ListAccountsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gomoneypb.accounts.v1.ListAccountsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAccountsRequest {
    return new ListAccountsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAccountsRequest {
    return new ListAccountsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAccountsRequest {
    return new ListAccountsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListAccountsRequest | PlainMessage<ListAccountsRequest> | undefined, b: ListAccountsRequest | PlainMessage<ListAccountsRequest> | undefined): boolean {
    return proto3.util.equals(ListAccountsRequest, a, b);
  }
}

/**
 * @generated from message gomoneypb.accounts.v1.ListAccountsResponse
 */
export class ListAccountsResponse extends Message<ListAccountsResponse> {
  /**
   * @generated from field: repeated gomoneypb.accounts.v1.ListAccountsResponse.AccountItem accounts = 1;
   */
  accounts: ListAccountsResponse_AccountItem[] = [];

  constructor(data?: PartialMessage<ListAccountsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gomoneypb.accounts.v1.ListAccountsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "accounts", kind: "message", T: ListAccountsResponse_AccountItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAccountsResponse {
    return new ListAccountsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAccountsResponse {
    return new ListAccountsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAccountsResponse {
    return new ListAccountsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListAccountsResponse | PlainMessage<ListAccountsResponse> | undefined, b: ListAccountsResponse | PlainMessage<ListAccountsResponse> | undefined): boolean {
    return proto3.util.equals(ListAccountsResponse, a, b);
  }
}

/**
 * @generated from message gomoneypb.accounts.v1.ListAccountsResponse.AccountItem
 */
export class ListAccountsResponse_AccountItem extends Message<ListAccountsResponse_AccountItem> {
  /**
   * @generated from field: gomoneypb.v1.Account account = 1;
   */
  account?: Account;

  constructor(data?: PartialMessage<ListAccountsResponse_AccountItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gomoneypb.accounts.v1.ListAccountsResponse.AccountItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account", kind: "message", T: Account },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAccountsResponse_AccountItem {
    return new ListAccountsResponse_AccountItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAccountsResponse_AccountItem {
    return new ListAccountsResponse_AccountItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAccountsResponse_AccountItem {
    return new ListAccountsResponse_AccountItem().fromJsonString(jsonString, options);
  }

  static equals(a: ListAccountsResponse_AccountItem | PlainMessage<ListAccountsResponse_AccountItem> | undefined, b: ListAccountsResponse_AccountItem | PlainMessage<ListAccountsResponse_AccountItem> | undefined): boolean {
    return proto3.util.equals(ListAccountsResponse_AccountItem, a, b);
  }
}

/**
 * @generated from message gomoneypb.accounts.v1.CreateAccountRequest
 */
export class CreateAccountRequest extends Message<CreateAccountRequest> {
  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string currency = 3;
   */
  currency = "";

  /**
   * @generated from field: map<string, string> extra = 5;
   */
  extra: { [key: string]: string } = {};

  /**
   * @generated from field: gomoneypb.v1.AccountType type = 8;
   */
  type = AccountType.UNSPECIFIED;

  /**
   * @generated from field: string note = 9;
   */
  note = "";

  /**
   * @generated from field: optional string liability_percent = 10;
   */
  liabilityPercent?: string;

  /**
   * @generated from field: string iban = 11;
   */
  iban = "";

  /**
   * @generated from field: string account_number = 12;
   */
  accountNumber = "";

  constructor(data?: PartialMessage<CreateAccountRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gomoneypb.accounts.v1.CreateAccountRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "currency", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "extra", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 8, name: "type", kind: "enum", T: proto3.getEnumType(AccountType) },
    { no: 9, name: "note", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "liability_percent", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 11, name: "iban", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "account_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAccountRequest {
    return new CreateAccountRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAccountRequest {
    return new CreateAccountRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAccountRequest {
    return new CreateAccountRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateAccountRequest | PlainMessage<CreateAccountRequest> | undefined, b: CreateAccountRequest | PlainMessage<CreateAccountRequest> | undefined): boolean {
    return proto3.util.equals(CreateAccountRequest, a, b);
  }
}

/**
 * @generated from message gomoneypb.accounts.v1.CreateAccountResponse
 */
export class CreateAccountResponse extends Message<CreateAccountResponse> {
  /**
   * @generated from field: gomoneypb.v1.Account account = 1;
   */
  account?: Account;

  constructor(data?: PartialMessage<CreateAccountResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gomoneypb.accounts.v1.CreateAccountResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account", kind: "message", T: Account },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAccountResponse {
    return new CreateAccountResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAccountResponse {
    return new CreateAccountResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAccountResponse {
    return new CreateAccountResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateAccountResponse | PlainMessage<CreateAccountResponse> | undefined, b: CreateAccountResponse | PlainMessage<CreateAccountResponse> | undefined): boolean {
    return proto3.util.equals(CreateAccountResponse, a, b);
  }
}

