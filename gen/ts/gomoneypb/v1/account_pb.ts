// @generated by protoc-gen-es v1.10.0 with parameter "target=ts,import_extension=none"
// @generated from file gomoneypb/v1/account.proto (package gomoneypb.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from enum gomoneypb.v1.AccountType
 */
export enum AccountType {
  /**
   * @generated from enum value: ACCOUNT_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ACCOUNT_TYPE_REGULAR = 1;
   */
  REGULAR = 1,

  /**
   * @generated from enum value: ACCOUNT_TYPE_SAVINGS = 2;
   */
  SAVINGS = 2,

  /**
   * @generated from enum value: ACCOUNT_TYPE_BROKERAGE = 3;
   */
  BROKERAGE = 3,

  /**
   * @generated from enum value: ACCOUNT_TYPE_LIABILITY = 4;
   */
  LIABILITY = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(AccountType)
proto3.util.setEnumType(AccountType, "gomoneypb.v1.AccountType", [
  { no: 0, name: "ACCOUNT_TYPE_UNSPECIFIED" },
  { no: 1, name: "ACCOUNT_TYPE_REGULAR" },
  { no: 2, name: "ACCOUNT_TYPE_SAVINGS" },
  { no: 3, name: "ACCOUNT_TYPE_BROKERAGE" },
  { no: 4, name: "ACCOUNT_TYPE_LIABILITY" },
]);

/**
 * @generated from message gomoneypb.v1.Account
 */
export class Account extends Message<Account> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string currency = 3;
   */
  currency = "";

  /**
   * @generated from field: string current_balance = 4;
   */
  currentBalance = "";

  /**
   * @generated from field: map<string, string> extra = 5;
   */
  extra: { [key: string]: string } = {};

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 6;
   */
  updatedAt?: Timestamp;

  /**
   * @generated from field: optional google.protobuf.Timestamp deleted_at = 7;
   */
  deletedAt?: Timestamp;

  /**
   * @generated from field: gomoneypb.v1.AccountType type = 8;
   */
  type = AccountType.UNSPECIFIED;

  /**
   * @generated from field: string note = 9;
   */
  note = "";

  /**
   * @generated from field: optional string liability_percent = 10;
   */
  liabilityPercent?: string;

  /**
   * @generated from field: string iban = 11;
   */
  iban = "";

  /**
   * @generated from field: string account_number = 12;
   */
  accountNumber = "";

  constructor(data?: PartialMessage<Account>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gomoneypb.v1.Account";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "currency", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "current_balance", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "extra", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 6, name: "updated_at", kind: "message", T: Timestamp },
    { no: 7, name: "deleted_at", kind: "message", T: Timestamp, opt: true },
    { no: 8, name: "type", kind: "enum", T: proto3.getEnumType(AccountType) },
    { no: 9, name: "note", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "liability_percent", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 11, name: "iban", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "account_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Account {
    return new Account().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Account {
    return new Account().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Account {
    return new Account().fromJsonString(jsonString, options);
  }

  static equals(a: Account | PlainMessage<Account> | undefined, b: Account | PlainMessage<Account> | undefined): boolean {
    return proto3.util.equals(Account, a, b);
  }
}

